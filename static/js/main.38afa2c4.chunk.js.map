{"version":3,"sources":["js/helpers/Globals.js","js/Line.js","audio/lines-no-1.ogg","audio/lines-no-1.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","Line","divisor","colour","weight","this","p","origin","x","random","width","y","height","destination","direction","randomUnitVector","length","parseInt","Number","isInteger","color","setAlpha","strokeCap","ROUND","theta","Math","PI","out","cos","sin","push","translate","strokeWeight","stroke","line","pop","dist","P5SketchWithAudio","sketchRef","useRef","Sketch","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","lines","lineArrays","minLines","maxLines","preload","song","loadSound","audio","Midi","fromUrl","midi","then","result","noteSet1","tracks","notes","noteSet2","scheduleCueSet","noteSet","callbackName","lastTicks","i","note","ticks","time","currentCue","addCue","setup","randomColor","require","createCanvas","bgColour","darkBGs","luminosity","count","lightBGs","preloadLineArrays","draw","background","forEach","isPlaying","update","darkMode","limit","format","colours","j","executeCueSet1","executeCueSet2","mousePressed","pause","currentTime","buffer","duration","reset","addClass","play","updateCanvasDimensions","redraw","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38afa2c4.chunk.js","sourcesContent":["//p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default class Line {\n\n    constructor(p5, divisor, colour, weight = 0) {\n        this.p = p5;\n        this.divisor = divisor > 1 ? divisor : 1;\n        this.origin = {\n            x: this.p.random(this.p.width) / this.divisor, \n            y: this.p.random(this.p.height) / this.divisor\n        };\n        this.destination = {\n            x: this.origin.x,\n            y: this.origin.y\n        };\n        this.direction = this.randomUnitVector();\n        this.length = this.p.random(this.p.width / 16, this.p.width / 2) / this.divisor;\n        this.colour = colour ? colour : parseInt(this.p.random(255));\n        if(Number.isInteger(this.colour)){\n            this.colour = this.p.color(this.colour);\n            this.colour.setAlpha(this.p.random(255));\n        }\n        this.weight = 5 + weight;\n        this.strokeCap = this.p.ROUND; \n    }\n\n    randomUnitVector() {\n        const radius = 1; // unit circle\n        const theta = this.p.random(0, 1) * 2.0 * Math.PI;\n        const out = [];\n        out[0] = radius * Math.cos(theta);\n        out[1] = radius * Math.sin(theta);\n        return out;\n    }\n\n    draw() {\n        this.p.push();\n        this.p.translate(this.p.width / 2 - (this.p.width / this.divisor / 2), this.p.height / 2 - (this.p.height / this.divisor / 2));\n        this.p.strokeWeight(this.weight);\n        this.p.strokeCap(this.strokeCap);\n        this.p.stroke(this.colour);\n        this.p.line(this.origin.x, this.origin.y, this.destination.x, this.destination.y);\n        this.p.pop();\n    }\n\n    update() {\n        const distance = this.p.dist(this.origin.x, this.origin.y, this.destination.x, this.destination.y);\n        if(distance < this.length){\n            this.destination.x = this.destination.x + this.direction[0] * 10;\n            this.destination.y = this.destination.y + this.direction[1] * 10;\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/lines-no-1.31da1490.ogg\";","export default __webpack_public_path__ + \"static/media/lines-no-1.dbd05d27.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport Line from \"./Line.js\";\n\nimport audio from \"../audio/lines-no-1.ogg\";\nimport midi from \"../audio/lines-no-1.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n        \n        p.PPQ = 3840 * 4;\n\n        p.lines = [];\n\n        p.lineArrays = [];\n\n        p.minLines = 8;\n        \n        p.maxLines = 64;\n\n        p.preload = () => {\n            p.song = p.loadSound(audio);\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    const noteSet1 = result.tracks[4].notes; // Thor 1 - Percutron\n                    const noteSet2 = result.tracks[3].notes; // Synth 2 - Hyperbottom\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.scheduleCueSet(noteSet2, 'executeCueSet2');\n                }\n            );\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName)  => {\n            let lastTicks = -1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks){\n                    note.currentCue = i + 1;\n                    p.song.addCue(time, p.[callbackName], note);\n                    lastTicks = ticks;\n                }\n            }\n        } \n\n        p.setup = () => {\n            p.randomColor = require('randomcolor');\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.bgColour = 0;\n            p.darkBGs = p.randomColor({luminosity: 'dark', count: 12});\n            p.lightBGs = p.randomColor({luminosity: 'light', count: 12});\n            p.preloadLineArrays();\n        };\n\n        p.draw = () => {\n            p.background(p.bgColour);\n            if(p.lines.length){\n                p.lines.forEach(line => line.draw());\n                if(p.song.isPlaying()){\n                    p.lines.forEach(line => line.update());\n                }\n            }\n        };\n\n        p.preloadLineArrays = () => {\n            let divisor = 12;\n            for (let i = 0; i < 185; i++) {\n                if(i % 31 === 0){\n                    divisor = divisor - 2;\n                }\n                let darkMode = true;\n                if((i > 61 && i <= 92) || (i > 123 && i <= 154) ) {\n                    darkMode = false;\n                }\n                const limit = p.random(p.minLines, p.maxLines),\n                    luminosity = darkMode ? 'bright' : 'dark',\n                    format  = darkMode ? 'rgba' : 'rgb',\n                    colours = p.randomColor({luminosity: luminosity, count: limit, format: format});\n                if(i > 30) {\n                    for (let j = 0; j < limit; j++) {\n                        p.lines.push(new Line(p, divisor, colours[j], i / 10));\n                    }\n                }\n                else {\n                    for (let j = 0; j < limit; j++) {\n                        p.lines.push(new Line(p, divisor));\n                    }\n                }\n                p.lineArrays.push(p.lines);\n                p.lines = [];\n                \n            }\n        };\n\n        p.darkMode = true;\n\n        p.executeCueSet1 = (note) => {\n            const { currentCue } = note;\n            p.lines = p.lineArrays[currentCue - 1];\n        };\n\n\n        p.executeCueSet2 = (note) => {\n            const { ticks } = note;\n            if((ticks / p.PPQ) % 8 === 4) {\n                p.darkMode = !p.darkMode;\n            }\n            if((ticks / p.PPQ) % 4 === 0){\n                p.bgColour = p.darkMode ? p.random(p.darkBGs) : p.random(p.lightBGs);\n            }\n        };\n\n        p.mousePressed = () => {\n            if (p.song.isPlaying()) {\n                p.song.pause();\n            } else {\n                if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                    p.reset();\n                }\n                //document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                p.canvas.addClass(\"fade-in\");\n                p.song.play();\n            }\n        };\n\n        p.reset = () => {\n            p.bgColour = 0;\n            p.darkBGs = p.randomColor({luminosity: 'dark', count: 12});\n            p.lightBGs = p.randomColor({luminosity: 'light', count: 12});\n            p.lineArrays = [];\n            p.preloadLineArrays();\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.redraw();\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}